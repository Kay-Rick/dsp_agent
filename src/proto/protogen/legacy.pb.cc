// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: legacy.proto

#include "legacy.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
class DSPControllerRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DSPControllerRequest> _instance;
} _DSPControllerRequest_default_instance_;
class DSPControllerResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DSPControllerResponse> _instance;
} _DSPControllerResponse_default_instance_;
class ReconstructTimeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReconstructTimeResponse> _instance;
} _ReconstructTimeResponse_default_instance_;
class ConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigRequest> _instance;
} _ConfigRequest_default_instance_;
static void InitDefaultsscc_info_ConfigRequest_legacy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConfigRequest_default_instance_;
    new (ptr) ::ConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigRequest_legacy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConfigRequest_legacy_2eproto}, {}};

static void InitDefaultsscc_info_DSPControllerRequest_legacy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DSPControllerRequest_default_instance_;
    new (ptr) ::DSPControllerRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DSPControllerRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DSPControllerRequest_legacy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DSPControllerRequest_legacy_2eproto}, {}};

static void InitDefaultsscc_info_DSPControllerResponse_legacy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DSPControllerResponse_default_instance_;
    new (ptr) ::DSPControllerResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DSPControllerResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DSPControllerResponse_legacy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DSPControllerResponse_legacy_2eproto}, {}};

static void InitDefaultsscc_info_ReconstructTimeResponse_legacy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReconstructTimeResponse_default_instance_;
    new (ptr) ::ReconstructTimeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReconstructTimeResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReconstructTimeResponse_legacy_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReconstructTimeResponse_legacy_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_legacy_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_legacy_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_legacy_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_legacy_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DSPControllerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DSPControllerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ReconstructTimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ReconstructTimeResponse, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ConfigRequest, objid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DSPControllerRequest)},
  { 5, -1, sizeof(::DSPControllerResponse)},
  { 10, -1, sizeof(::ReconstructTimeResponse)},
  { 16, -1, sizeof(::ConfigRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DSPControllerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_DSPControllerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ReconstructTimeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigRequest_default_instance_),
};

const char descriptor_table_protodef_legacy_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014legacy.proto\"\026\n\024DSPControllerRequest\"\027"
  "\n\025DSPControllerResponse\"\'\n\027ReconstructTi"
  "meResponse\022\014\n\004time\030\001 \001(\002\"\036\n\rConfigReques"
  "t\022\r\n\005objid\030\001 \001(\t2\325\016\n\rDSPController\022;\n\nLo"
  "adSarApp\022\025.DSPControllerRequest\032\026.DSPCon"
  "trollerResponse\022<\n\013StartSarApp\022\025.DSPCont"
  "rollerRequest\032\026.DSPControllerResponse\022;\n"
  "\nStopSarApp\022\025.DSPControllerRequest\032\026.DSP"
  "ControllerResponse\022=\n\014SwitchSarApp\022\025.DSP"
  "ControllerRequest\032\026.DSPControllerRespons"
  "e\022=\n\014LoadElecReco\022\025.DSPControllerRequest"
  "\032\026.DSPControllerResponse\022>\n\rStartElecRec"
  "o\022\025.DSPControllerRequest\032\026.DSPController"
  "Response\022=\n\014StopElecReco\022\025.DSPController"
  "Request\032\026.DSPControllerResponse\022\?\n\016Switc"
  "hElecReco\022\025.DSPControllerRequest\032\026.DSPCo"
  "ntrollerResponse\022B\n\021LoadCommunication\022\025."
  "DSPControllerRequest\032\026.DSPControllerResp"
  "onse\022C\n\022StartCommunication\022\025.DSPControll"
  "erRequest\032\026.DSPControllerResponse\022B\n\021Sto"
  "pCommunication\022\025.DSPControllerRequest\032\026."
  "DSPControllerResponse\022D\n\023SwitchCommunica"
  "tion\022\025.DSPControllerRequest\032\026.DSPControl"
  "lerResponse\022=\n\023ConfigCommunication\022\016.Con"
  "figRequest\032\026.DSPControllerResponse\022\?\n\016Lo"
  "adNavigation\022\025.DSPControllerRequest\032\026.DS"
  "PControllerResponse\022@\n\017StartNavigation\022\025"
  ".DSPControllerRequest\032\026.DSPControllerRes"
  "ponse\022\?\n\016StopNavigation\022\025.DSPControllerR"
  "equest\032\026.DSPControllerResponse\022A\n\020Switch"
  "Navigation\022\025.DSPControllerRequest\032\026.DSPC"
  "ontrollerResponse\022:\n\020ConfigNavigation\022\016."
  "ConfigRequest\032\026.DSPControllerResponse\022@\n"
  "\017LoadElectricJam\022\025.DSPControllerRequest\032"
  "\026.DSPControllerResponse\022A\n\020StartElectric"
  "Jam\022\025.DSPControllerRequest\032\026.DSPControll"
  "erResponse\022@\n\017StopElectricJam\022\025.DSPContr"
  "ollerRequest\032\026.DSPControllerResponse\022B\n\021"
  "SwitchElectricJam\022\025.DSPControllerRequest"
  "\032\026.DSPControllerResponse\022;\n\021ConfigElectr"
  "icJam\022\016.ConfigRequest\032\026.DSPControllerRes"
  "ponse\022H\n\025GetComReconstructTime\022\025.DSPCont"
  "rollerRequest\032\030.ReconstructTimeResponse\022"
  "H\n\025GetSarReconstructTime\022\025.DSPController"
  "Request\032\030.ReconstructTimeResponse\022I\n\026Get"
  "ElecReconstructTime\022\025.DSPControllerReque"
  "st\032\030.ReconstructTimeResponse\022H\n\025GetNavRe"
  "constructTime\022\025.DSPControllerRequest\032\030.R"
  "econstructTimeResponse\022H\n\025GetJamReconstr"
  "uctTime\022\025.DSPControllerRequest\032\030.Reconst"
  "ructTimeResponseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_legacy_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_legacy_2eproto_sccs[4] = {
  &scc_info_ConfigRequest_legacy_2eproto.base,
  &scc_info_DSPControllerRequest_legacy_2eproto.base,
  &scc_info_DSPControllerResponse_legacy_2eproto.base,
  &scc_info_ReconstructTimeResponse_legacy_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_legacy_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_legacy_2eproto = {
  false, false, descriptor_table_protodef_legacy_2eproto, "legacy.proto", 2024,
  &descriptor_table_legacy_2eproto_once, descriptor_table_legacy_2eproto_sccs, descriptor_table_legacy_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_legacy_2eproto::offsets,
  file_level_metadata_legacy_2eproto, 4, file_level_enum_descriptors_legacy_2eproto, file_level_service_descriptors_legacy_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_legacy_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_legacy_2eproto)), true);

// ===================================================================

void DSPControllerRequest::InitAsDefaultInstance() {
}
class DSPControllerRequest::_Internal {
 public:
};

DSPControllerRequest::DSPControllerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:DSPControllerRequest)
}
DSPControllerRequest::DSPControllerRequest(const DSPControllerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DSPControllerRequest)
}

void DSPControllerRequest::SharedCtor() {
}

DSPControllerRequest::~DSPControllerRequest() {
  // @@protoc_insertion_point(destructor:DSPControllerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DSPControllerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DSPControllerRequest::ArenaDtor(void* object) {
  DSPControllerRequest* _this = reinterpret_cast< DSPControllerRequest* >(object);
  (void)_this;
}
void DSPControllerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DSPControllerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DSPControllerRequest& DSPControllerRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DSPControllerRequest_legacy_2eproto.base);
  return *internal_default_instance();
}


void DSPControllerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DSPControllerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DSPControllerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DSPControllerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DSPControllerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DSPControllerRequest)
  return target;
}

size_t DSPControllerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DSPControllerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DSPControllerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DSPControllerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DSPControllerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DSPControllerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DSPControllerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DSPControllerRequest)
    MergeFrom(*source);
  }
}

void DSPControllerRequest::MergeFrom(const DSPControllerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DSPControllerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DSPControllerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DSPControllerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DSPControllerRequest::CopyFrom(const DSPControllerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DSPControllerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DSPControllerRequest::IsInitialized() const {
  return true;
}

void DSPControllerRequest::InternalSwap(DSPControllerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DSPControllerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DSPControllerResponse::InitAsDefaultInstance() {
}
class DSPControllerResponse::_Internal {
 public:
};

DSPControllerResponse::DSPControllerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:DSPControllerResponse)
}
DSPControllerResponse::DSPControllerResponse(const DSPControllerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DSPControllerResponse)
}

void DSPControllerResponse::SharedCtor() {
}

DSPControllerResponse::~DSPControllerResponse() {
  // @@protoc_insertion_point(destructor:DSPControllerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DSPControllerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DSPControllerResponse::ArenaDtor(void* object) {
  DSPControllerResponse* _this = reinterpret_cast< DSPControllerResponse* >(object);
  (void)_this;
}
void DSPControllerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DSPControllerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DSPControllerResponse& DSPControllerResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DSPControllerResponse_legacy_2eproto.base);
  return *internal_default_instance();
}


void DSPControllerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DSPControllerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DSPControllerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DSPControllerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DSPControllerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DSPControllerResponse)
  return target;
}

size_t DSPControllerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DSPControllerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DSPControllerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DSPControllerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DSPControllerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DSPControllerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DSPControllerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DSPControllerResponse)
    MergeFrom(*source);
  }
}

void DSPControllerResponse::MergeFrom(const DSPControllerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DSPControllerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DSPControllerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DSPControllerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DSPControllerResponse::CopyFrom(const DSPControllerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DSPControllerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DSPControllerResponse::IsInitialized() const {
  return true;
}

void DSPControllerResponse::InternalSwap(DSPControllerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DSPControllerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReconstructTimeResponse::InitAsDefaultInstance() {
}
class ReconstructTimeResponse::_Internal {
 public:
};

ReconstructTimeResponse::ReconstructTimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ReconstructTimeResponse)
}
ReconstructTimeResponse::ReconstructTimeResponse(const ReconstructTimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:ReconstructTimeResponse)
}

void ReconstructTimeResponse::SharedCtor() {
  time_ = 0;
}

ReconstructTimeResponse::~ReconstructTimeResponse() {
  // @@protoc_insertion_point(destructor:ReconstructTimeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReconstructTimeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReconstructTimeResponse::ArenaDtor(void* object) {
  ReconstructTimeResponse* _this = reinterpret_cast< ReconstructTimeResponse* >(object);
  (void)_this;
}
void ReconstructTimeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReconstructTimeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReconstructTimeResponse& ReconstructTimeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReconstructTimeResponse_legacy_2eproto.base);
  return *internal_default_instance();
}


void ReconstructTimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ReconstructTimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReconstructTimeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReconstructTimeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReconstructTimeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float time = 1;
  if (!(this->time() <= 0 && this->time() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReconstructTimeResponse)
  return target;
}

size_t ReconstructTimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReconstructTimeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float time = 1;
  if (!(this->time() <= 0 && this->time() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReconstructTimeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReconstructTimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructTimeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReconstructTimeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReconstructTimeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReconstructTimeResponse)
    MergeFrom(*source);
  }
}

void ReconstructTimeResponse::MergeFrom(const ReconstructTimeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReconstructTimeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.time() <= 0 && from.time() >= 0)) {
    _internal_set_time(from._internal_time());
  }
}

void ReconstructTimeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReconstructTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructTimeResponse::CopyFrom(const ReconstructTimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReconstructTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructTimeResponse::IsInitialized() const {
  return true;
}

void ReconstructTimeResponse::InternalSwap(ReconstructTimeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(time_, other->time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReconstructTimeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigRequest::InitAsDefaultInstance() {
}
class ConfigRequest::_Internal {
 public:
};

ConfigRequest::ConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ConfigRequest)
}
ConfigRequest::ConfigRequest(const ConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  objid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_objid().empty()) {
    objid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_objid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ConfigRequest)
}

void ConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigRequest_legacy_2eproto.base);
  objid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ConfigRequest::~ConfigRequest() {
  // @@protoc_insertion_point(destructor:ConfigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  objid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigRequest::ArenaDtor(void* object) {
  ConfigRequest* _this = reinterpret_cast< ConfigRequest* >(object);
  (void)_this;
}
void ConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigRequest& ConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigRequest_legacy_2eproto.base);
  return *internal_default_instance();
}


void ConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string objid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_objid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigRequest.objid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string objid = 1;
  if (this->objid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_objid().data(), static_cast<int>(this->_internal_objid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigRequest.objid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_objid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigRequest)
  return target;
}

size_t ConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string objid = 1;
  if (this->objid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_objid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConfigRequest)
    MergeFrom(*source);
  }
}

void ConfigRequest::MergeFrom(const ConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objid().size() > 0) {
    _internal_set_objid(from._internal_objid());
  }
}

void ConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigRequest::CopyFrom(const ConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigRequest::IsInitialized() const {
  return true;
}

void ConfigRequest::InternalSwap(ConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  objid_.Swap(&other->objid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::DSPControllerRequest* Arena::CreateMaybeMessage< ::DSPControllerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DSPControllerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::DSPControllerResponse* Arena::CreateMaybeMessage< ::DSPControllerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DSPControllerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ReconstructTimeResponse* Arena::CreateMaybeMessage< ::ReconstructTimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ReconstructTimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigRequest* Arena::CreateMaybeMessage< ::ConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ConfigRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
